<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/.gitattributes">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.gitattributes" />
              <option name="updatedContent" value="# Handle line endings automatically for files detected as text&#10;# and leave all files detected as binary untouched.&#10;* text=auto&#10;&#10;# The above will handle all files NOT listed below.&#10;# These files are text and should be normalized (Convert crlf =&gt; lf)&#10;*.css           text&#10;*.html          text&#10;*.js            text&#10;*.json          text&#10;*.jsx           text&#10;*.md            text&#10;*.php           text&#10;*.py            text&#10;*.rb            text&#10;*.sass          text&#10;*.scss          text&#10;*.sh            text&#10;*.sql           text&#10;*.txt           text&#10;*.xml           text&#10;*.yml           text&#10;*.yaml          text&#10;&#10;# These files are binary and should be left untouched&#10;# (binary is a macro for -text -diff)&#10;*.7z            binary&#10;*.dmg           binary&#10;*.gz            binary&#10;*.iso           binary&#10;*.jar           binary&#10;*.rar           binary&#10;*.tar           binary&#10;*.zip           binary&#10;*.png           binary&#10;*.jpg           binary&#10;*.jpeg          binary&#10;*.gif           binary&#10;*.ico           binary&#10;*.mov           binary&#10;*.mp4           binary&#10;*.mp3           binary&#10;*.flv           binary&#10;*.fla           binary&#10;*.swf           binary&#10;*.gz            binary&#10;*.zip           binary&#10;*.7z            binary&#10;*.ttf           binary&#10;*.eot           binary&#10;*.woff          binary&#10;*.pyc           binary&#10;*.pdf           binary&#10;*.ez            binary&#10;*.bz2           binary&#10;*.swp           binary&#10;*.webp          binary&#10;&#10;# Force batch scripts to always use CRLF line endings so that if a repo is accessed&#10;# in Windows via a file share from Linux, the scripts will work.&#10;*.{cmd,[cC][mM][dD]} text eol=crlf&#10;*.{bat,[bB][aA][tT]} text eol=crlf&#10;&#10;# Force bash scripts to always use LF line endings so that if a repo is accessed&#10;# in Unix via a file share from Windows, the scripts will work.&#10;*.sh text eol=lf" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/pages/Landing/sections/FeaturesSection/components/FloatingElements/FloatingElements.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/pages/Landing/sections/FeaturesSection/components/FloatingElements/FloatingElements.css" />
              <option name="updatedContent" value="/* Floating Elements Styles */&#10;.floating-elements {&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  pointer-events: none;&#10;  z-index: 0;&#10;  overflow: hidden;&#10;}&#10;&#10;.floating-element {&#10;  position: absolute;&#10;  z-index: 2;&#10;}&#10;&#10;.element-icon {&#10;  position: relative;&#10;  display: flex;&#10;  align-items: center;&#10;  justify-content: center;&#10;  width: 60px;&#10;  height: 60px;&#10;  border-radius: 50%;&#10;  border: 2px solid;&#10;  backdrop-filter: blur(10px);&#10;  transition: all 0.3s ease;&#10;  animation: float var(--element-delay, 0s) infinite;&#10;}&#10;&#10;.element-icon:hover {&#10;  transform: scale(1.1);&#10;}&#10;&#10;.element-pulse {&#10;  position: absolute;&#10;  top: 50%;&#10;  left: 50%;&#10;  width: 8px;&#10;  height: 8px;&#10;  border-radius: 50%;&#10;  transform: translate(-50%, -50%);&#10;  z-index: -1;&#10;}&#10;&#10;/* Background Shapes */&#10;.background-shapes {&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  z-index: 1;&#10;}&#10;&#10;.shape {&#10;  position: absolute;&#10;  border-radius: 50%;&#10;  opacity: 0.1;&#10;}&#10;&#10;.shape-1 {&#10;  width: 120px;&#10;  height: 120px;&#10;  background: linear-gradient(135deg, #3b82f6, #1d4ed8);&#10;  top: 15%;&#10;  right: 20%;&#10;}&#10;&#10;.shape-2 {&#10;  width: 80px;&#10;  height: 80px;&#10;  background: linear-gradient(135deg, #10b981, #059669);&#10;  bottom: 20%;&#10;  left: 25%;&#10;}&#10;&#10;.shape-3 {&#10;  width: 100px;&#10;  height: 100px;&#10;  background: linear-gradient(135deg, #f59e0b, #d97706);&#10;  top: 50%;&#10;  right: 10%;&#10;}&#10;&#10;/* Animations */&#10;@keyframes float {&#10;  0%, 100% {&#10;    transform: translateY(0px) rotate(0deg);&#10;  }&#10;  33% {&#10;    transform: translateY(-10px) rotate(2deg);&#10;  }&#10;  66% {&#10;    transform: translateY(5px) rotate(-2deg);&#10;  }&#10;}&#10;&#10;@keyframes pulse {&#10;  0%, 100% {&#10;    transform: translate(-50%, -50%) scale(1);&#10;    opacity: 0.7;&#10;  }&#10;  50% {&#10;    transform: translate(-50%, -50%) scale(3);&#10;    opacity: 0;&#10;  }&#10;}&#10;&#10;.element-pulse {&#10;  animation: pulse 3s infinite;&#10;}&#10;&#10;/* Responsive Design */&#10;@media (max-width: 1024px) {&#10;  .element-icon {&#10;    width: 50px;&#10;    height: 50px;&#10;  }&#10;  &#10;  .shape-1 {&#10;    width: 100px;&#10;    height: 100px;&#10;  }&#10;  &#10;  .shape-2 {&#10;    width: 70px;&#10;    height: 70px;&#10;  }&#10;  &#10;  .shape-3 {&#10;    width: 85px;&#10;    height: 85px;&#10;  }&#10;}&#10;&#10;@media (max-width: 768px) {&#10;  .element-icon {&#10;    width: 40px;&#10;    height: 40px;&#10;  }&#10;  &#10;  .shape-1 {&#10;    width: 80px;&#10;    height: 80px;&#10;  }&#10;  &#10;  .shape-2 {&#10;    width: 60px;&#10;    height: 60px;&#10;  }&#10;  &#10;  .shape-3 {&#10;    width: 70px;&#10;    height: 70px;&#10;  }&#10;}&#10;&#10;@media (max-width: 480px) {&#10;  .floating-elements {&#10;    display: none; /* Hide floating elements on very small screens for performance */&#10;  }&#10;}&#10;&#10;/* Additional visual effects */&#10;.floating-element::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: -20px;&#10;  left: -20px;&#10;  right: -20px;&#10;  bottom: -20px;&#10;  background: radial-gradient(circle, currentColor 0%, transparent 70%);&#10;  opacity: 0.05;&#10;  border-radius: 50%;&#10;  animation: glow 4s ease-in-out infinite alternate;&#10;}&#10;&#10;@keyframes glow {&#10;  from {&#10;    opacity: 0.03;&#10;    transform: scale(0.8);&#10;  }&#10;  to {&#10;    opacity: 0.08;&#10;    transform: scale(1.2);&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/pages/Landing/sections/FeaturesSection/components/FloatingElements/FloatingElements.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/pages/Landing/sections/FeaturesSection/components/FloatingElements/FloatingElements.jsx" />
              <option name="updatedContent" value="import React from 'react';&#10;import { motion } from 'framer-motion';&#10;import { Leaf, Droplets, Sun, Wind, Zap, TrendingUp } from 'lucide-react';&#10;import './FloatingElements.css';&#10;&#10;const FloatingElements = () =&gt; {&#10;  const elements = [&#10;    {&#10;      id: 1,&#10;      icon: &lt;Leaf size={24} /&gt;,&#10;      position: { top: '10%', left: '5%' },&#10;      delay: 0,&#10;      color: '#10b981'&#10;    },&#10;    {&#10;      id: 2,&#10;      icon: &lt;Droplets size={20} /&gt;,&#10;      position: { top: '20%', right: '10%' },&#10;      delay: 0.5,&#10;      color: '#3b82f6'&#10;    },&#10;    {&#10;      id: 3,&#10;      icon: &lt;Sun size={22} /&gt;,&#10;      position: { top: '60%', left: '8%' },&#10;      delay: 1,&#10;      color: '#f59e0b'&#10;    },&#10;    {&#10;      id: 4,&#10;      icon: &lt;Wind size={18} /&gt;,&#10;      position: { top: '70%', right: '15%' },&#10;      delay: 1.5,&#10;      color: '#6b7280'&#10;    },&#10;    {&#10;      id: 5,&#10;      icon: &lt;Zap size={16} /&gt;,&#10;      position: { top: '40%', right: '5%' },&#10;      delay: 2,&#10;      color: '#8b5cf6'&#10;    },&#10;    {&#10;      id: 6,&#10;      icon: &lt;TrendingUp size={20} /&gt;,&#10;      position: { bottom: '15%', left: '10%' },&#10;      delay: 2.5,&#10;      color: '#ef4444'&#10;    }&#10;  ];&#10;&#10;  const floatingAnimation = {&#10;    y: [-10, 10, -10],&#10;    rotate: [-5, 5, -5],&#10;    transition: {&#10;      duration: 4,&#10;      repeat: Infinity,&#10;      ease: &quot;easeInOut&quot;&#10;    }&#10;  };&#10;&#10;  const pulseAnimation = {&#10;    scale: [1, 1.2, 1],&#10;    opacity: [0.7, 1, 0.7],&#10;    transition: {&#10;      duration: 3,&#10;      repeat: Infinity,&#10;      ease: &quot;easeInOut&quot;&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;floating-elements&quot;&gt;&#10;      {elements.map((element) =&gt; (&#10;        &lt;motion.div&#10;          key={element.id}&#10;          className=&quot;floating-element&quot;&#10;          style={{&#10;            ...element.position,&#10;            color: element.color&#10;          }}&#10;          initial={{ opacity: 0, scale: 0 }}&#10;          animate={{ opacity: 1, scale: 1 }}&#10;          transition={{ &#10;            delay: element.delay,&#10;            duration: 0.6,&#10;            ease: &quot;easeOut&quot;&#10;          }}&#10;        &gt;&#10;          &lt;motion.div&#10;            className=&quot;element-icon&quot;&#10;            animate={floatingAnimation}&#10;            style={{ &#10;              '--element-delay': `${element.delay}s`,&#10;              backgroundColor: `${element.color}15`,&#10;              borderColor: `${element.color}30`&#10;            }}&#10;          &gt;&#10;            {element.icon}&#10;          &lt;/motion.div&gt;&#10;          &#10;          &lt;motion.div&#10;            className=&quot;element-pulse&quot;&#10;            animate={pulseAnimation}&#10;            style={{ &#10;              backgroundColor: element.color,&#10;              animationDelay: `${element.delay}s`&#10;            }}&#10;          /&gt;&#10;        &lt;/motion.div&gt;&#10;      ))}&#10;      &#10;      {/* Animated background shapes */}&#10;      &lt;div className=&quot;background-shapes&quot;&gt;&#10;        &lt;motion.div&#10;          className=&quot;shape shape-1&quot;&#10;          animate={{&#10;            x: [0, 30, 0],&#10;            y: [0, -20, 0],&#10;            rotate: [0, 180, 360]&#10;          }}&#10;          transition={{&#10;            duration: 20,&#10;            repeat: Infinity,&#10;            ease: &quot;linear&quot;&#10;          }}&#10;        /&gt;&#10;        &lt;motion.div&#10;          className=&quot;shape shape-2&quot;&#10;          animate={{&#10;            x: [0, -25, 0],&#10;            y: [0, 15, 0],&#10;            rotate: [0, -180, -360]&#10;          }}&#10;          transition={{&#10;            duration: 25,&#10;            repeat: Infinity,&#10;            ease: &quot;linear&quot;&#10;          }}&#10;        /&gt;&#10;        &lt;motion.div&#10;          className=&quot;shape shape-3&quot;&#10;          animate={{&#10;            x: [0, 20, 0],&#10;            y: [0, -30, 0],&#10;            scale: [1, 1.2, 1]&#10;          }}&#10;          transition={{&#10;            duration: 15,&#10;            repeat: Infinity,&#10;            ease: &quot;easeInOut&quot;&#10;          }}&#10;        /&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;export default FloatingElements;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/pages/PreOrders.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/pages/PreOrders.jsx" />
              <option name="originalContent" value="import React from 'react';&#10;&#10;const PreOrders = () =&gt; &lt;div style={{padding:32}}&gt;&lt;h1&gt;Pre-Orders&lt;/h1&gt;&lt;p&gt;This is the Pre-Orders page.&lt;/p&gt;&lt;/div&gt;;&#10;&#10;export default PreOrders;&#10;&#10;" />
              <option name="updatedContent" value="import React from 'react';&#10;&#10;const PreOrders = () =&gt; &lt;div style={{padding:32}}&gt;&lt;h1&gt;Pre-Orders&lt;/h1&gt;&lt;p&gt;This is the Pre-Orders page.&lt;/p&gt;&lt;/div&gt;;&#10;&#10;export default PreOrders;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>